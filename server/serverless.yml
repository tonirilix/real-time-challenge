# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: server # NOTE: update this with your service name

plugins:
  - serverless-offline

# Configuration variables
custom:
  secrets: ${file(secrets.json)}

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    JWT_SECRET: ${self:custom.secrets.jwtSecret}

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
# package:
#  include:
#    - lib/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  hello:
    handler: dist/handler.hello 
    events:
      - http:
          path: /
          method: get
          cors: true
  auth:
    handler: dist/auth/guard.handler
    cors: true
  login:
    handler: dist/auth/login.handler
    events:
      - http:
          path: login
          method: post
          cors: true  
  setLocation:
    handler: dist/geo/handler.setLocation
    events:
      - http:
          path: geo/locations
          method: post
          cors: true
          authorizer: auth
  getUserLocations:
    handler: dist/geo/handler.getUserLocations
    events:
      - http:
          path: users/{id}/geo/locations
          method: get
          cors: true
          authorizer: auth

